<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <OutputType>Exe</OutputType>
    <AssemblyName>blazor-devserver</AssemblyName>
    <PackageId>Microsoft.AspNetCore.Components.WebAssembly.DevServer</PackageId>
    <IsShippingPackage>true</IsShippingPackage>
    <StartupObject>Microsoft.AspNetCore.Components.WebAssembly.DevServer.Program</StartupObject>
    <Description>Development server for use when building Blazor applications.</Description>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Set this to false because assemblies should not reference this assembly directly, (except for tests, of course). -->
    <IsProjectReferenceProvider>false</IsProjectReferenceProvider>
    <UseAspNetCoreSharedRuntime>true</UseAspNetCoreSharedRuntime>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.Components.WebAssembly.Server" />
    <Compile Include="$(SharedSourceRoot)CommandLineUtils\**\*.cs" />

    <!--
      We need this project to target the M.AspNetCore.App runtime to have the correct layout when packed.
      To do this, we set UseAspNetCoreSharedRuntime=true and add this framework reference. One side effect of this is that
      we are no longer building against projects in this repo, but against the runtime that the SDK carries.
    -->
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <!-- Pack settings -->
  <PropertyGroup>
    <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);publish</GenerateNuspecDependsOn>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <NuspecFile>Microsoft.AspNetCore.Components.WebAssembly.DevServer.nuspec</NuspecFile>
  </PropertyGroup>

  <ItemGroup>
    <NuspecProperty Include="publishDir=$(PublishDir)" />
    <NuspecProperty Include="componentsrootdir=..\..\..\" />
    <NuspecProperty Include="PackageThirdPartyNoticesFile=$(PackageThirdPartyNoticesFile)" />
  </ItemGroup>

</Project>
